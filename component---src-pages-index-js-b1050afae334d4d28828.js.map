{"version":3,"sources":["webpack:///./node_modules/copy-to-clipboard/index.js","webpack:///./node_modules/toggle-selection/index.js","webpack:///./src/components/RandomBorisImage.js","webpack:///./node_modules/@material-ui/core/esm/useMediaQuery/useMediaQuery.js","webpack:///./src/components/AlertBanner.js","webpack:///./src/components/PortraitWarning.js","webpack:///./src/components/BingoGame/BingoButton.js","webpack:///./src/data/bingoItems.js","webpack:///./src/functions/GenerateRandomGameBoard.js","webpack:///./src/functions/generateTransitions.js","webpack:///./src/components/button.js","webpack:///./src/components/ScrollToViewMore.js","webpack:///./src/components/BingoGame/PlayingField.js","webpack:///./src/functions/DecodeCustomItems.js","webpack:///./src/functions/useStateWithCallback.js","webpack:///./src/functions/EncodeGameBoard.js","webpack:///./src/pages/index.js"],"names":["deselectCurrent","clipboardToIE11Formatting","module","exports","text","options","debug","message","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","error","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","rangeCount","active","activeElement","ranges","i","push","getRangeAt","tagName","toUpperCase","blur","type","forEach","focus","RandomBorisImage","props","allImages","useStaticQuery","allFile","nodes","randomImageData","Math","floor","random","length","childImageSharp","fixed","useMediaQuery","queryInput","arguments","undefined","theme","useTheme","getThemeProps","name","query","supportMatchMedia","matchMedia","_props$options","_props$options$defaul","defaultMatches","_props$options$matchM","_props$options$noSsr","noSsr","_props$options$ssrMat","ssrMatchMedia","_React$useState","matches","match","setMatch","queryList","updateMatch","addListener","removeListener","useStyles","makeStyles","root","width","padding","background","Colors","dark","color","offWhite","fontSize","afterHeading","marginTop","title","paddingBottom","padBottom","marginBottom","alternateBackground","primaryDark","AlertBanner","noPadding","alternateColor","innerClassName","classes","className","clsx","bold","PortraitWarning","Breakpoints","upTo","medium","display","alignItems","justifyContent","textAlign","lineHeight","cursor","outline","toryPrimary","React","memo","isCrossedOut","description","onClick","aria-pressed","bingoItems","GenerateRandomGameBoard","customCount","board","dataIndex","chooseRandomIndex","AllData","includes","Durations","Object","freeze","long","short","DefaultDuration","generateTransitions","property","duration","easing","propsIsArray","Array","isArray","durationIsArray","easingIsArray","endTransition","transition","prop","_duration","_easing","thisTrans","createTransitionValue","durationMs","textDecoration","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","border","normalHoverColor","borderColor","primary","icon","height","marginRight","iconOnly","Button","children","Icon","url","SyntaxError","isAnchor","startsWith","circle","href","ScrollTo","ID","substr","defaultProps","hoverFocusColor","ScrollToViewMore","playingFieldScrollBarShown","center","gridContainer","overflowX","maxWidth","grid","gridTemplateColumns","gridTemplateRows","gap","minWidth","controls","copyButton","margin","copyButtonCopiedText","left","right","bottom","opacity","GetGameBoard","params","URLSearchParams","location","search","items","get","data","b64items","atob","split","item","decoded","remainingElements","extraItems","DecodeCustomItems","delete","toString","initialState","state","_setState","callbackRef","isFirstCallbackCall","setState","defaultGameState","map","checked","useState","useRef","useCallback","setStateAction","callback","current","useEffect","gameState","setGameState","forceUpdate","useReducer","x","copyToClipboard","origin","pathname","gameBoard","encodedBoard","btoa","commaDelimitedEncodedBoard","join","EncodeGameBoard","span","currentTarget","lastChild","setAttribute","setTimeout","removeAttribute","boardItem","key","index","s","headerContainer","flexDirection","heading","downTo","small","marginLeft","bojo","transformOrigin","transform","wider","IndexPage","alt","noSpacing"],"mappings":"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","file":"component---src-pages-index-js-b1050afae334d4d28828.js","sourcesContent":["\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n};\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n      message,\n      reselectPrevious,\n      range,\n      selection,\n      mark,\n      success = false;\n\n  if (!options) {\n    options = {};\n  }\n\n  debug = options.debug || false;\n\n  try {\n    reselectPrevious = deselectCurrent();\n    range = document.createRange();\n    selection = document.getSelection();\n    mark = document.createElement(\"span\");\n    mark.textContent = text; // reset user styles for span element\n\n    mark.style.all = \"unset\"; // prevents scrolling to the end of the page\n\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\"; // used to preserve spaces and line breaks\n\n    mark.style.whiteSpace = \"pre\"; // do not inherit user-select (it may be `none`)\n\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function (e) {\n      e.stopPropagation();\n\n      if (options.format) {\n        e.preventDefault();\n\n        if (typeof e.clipboardData === \"undefined\") {\n          // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"];\n          window.clipboardData.setData(format, text);\n        } else {\n          // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n    document.body.appendChild(mark);\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n    var successful = document.execCommand(\"copy\");\n\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;","module.exports = function () {\n  var selection = document.getSelection();\n\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n\n  var active = document.activeElement;\n  var ranges = [];\n\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) {\n    // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' && selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function (range) {\n        selection.addRange(range);\n      });\n    }\n\n    active && active.focus();\n  };\n};","import React from 'react'\r\nimport Img from 'gatsby-image'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\n\r\nexport default function RandomBorisImage(props) {\r\n  const allImages = useStaticQuery(graphql`\r\n    {\r\n      allFile(filter: { relativeDirectory: { eq: \"boris-weird\" } }) {\r\n        nodes {\r\n          childImageSharp {\r\n            fixed(quality: 50, width: 100, height: 100) {\r\n              ...GatsbyImageSharpFixed\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `).allFile.nodes\r\n\r\n  const randomImageData = allImages[Math.floor(Math.random() * allImages.length)].childImageSharp.fixed\r\n\r\n  return <Img fixed={randomImageData} {...props} />\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nexport default function useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var theme = useTheme();\n  var props = getThemeProps({\n    theme: theme,\n    name: 'MuiUseMediaQuery',\n    props: {}\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['Material-UI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // Wait for jsdom to support the match media feature.\n  // All the browsers Material-UI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n\n  var _props$options = _extends({}, props, options),\n      _props$options$defaul = _props$options.defaultMatches,\n      defaultMatches = _props$options$defaul === void 0 ? false : _props$options$defaul,\n      _props$options$matchM = _props$options.matchMedia,\n      matchMedia = _props$options$matchM === void 0 ? supportMatchMedia ? window.matchMedia : null : _props$options$matchM,\n      _props$options$noSsr = _props$options.noSsr,\n      noSsr = _props$options$noSsr === void 0 ? false : _props$options$noSsr,\n      _props$options$ssrMat = _props$options.ssrMatchMedia,\n      ssrMatchMedia = _props$options$ssrMat === void 0 ? null : _props$options$ssrMat;\n\n  var _React$useState = React.useState(function () {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  }),\n      match = _React$useState[0],\n      setMatch = _React$useState[1];\n\n  React.useEffect(function () {\n    var active = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    var queryList = matchMedia(query);\n\n    var updateMatch = function updateMatch() {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui-org/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch();\n    queryList.addListener(updateMatch);\n    return function () {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query: query,\n      match: match\n    });\n  }\n\n  return match;\n}","import { makeStyles } from '@material-ui/styles'\r\nimport clsx from 'clsx'\r\nimport React from 'react'\r\nimport { Colors } from '../data'\r\nimport { Paragraph } from '../typography'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n    padding: '12px 16px',\r\n    background: Colors.dark,\r\n    color: Colors.offWhite,\r\n    fontSize: 18,\r\n  },\r\n  afterHeading: {\r\n    marginTop: -6,\r\n  },\r\n  title: {\r\n    paddingBottom: 4,\r\n  },\r\n  padBottom: {\r\n    marginBottom: 16,\r\n  },\r\n  alternateBackground: {\r\n    background: Colors.primaryDark,\r\n  },\r\n})\r\n\r\nexport default function AlertBanner({ title, message, noPadding, afterHeading, alternateColor, innerClassName }) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <section\r\n      className={clsx(\r\n        classes.root,\r\n        !noPadding && classes.padBottom,\r\n        afterHeading && classes.afterHeading,\r\n        alternateColor && classes.alternateBackground,\r\n      )}\r\n    >\r\n      <div className={innerClassName}>\r\n        <Paragraph className={classes.title} bold>\r\n          {title}\r\n        </Paragraph>\r\n        <Paragraph noPadding>{message}</Paragraph>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useMediaQuery } from '@material-ui/core'\r\nimport { Breakpoints } from '../data'\r\nimport AlertBanner from './AlertBanner'\r\n\r\nexport default function PortraitWarning() {\r\n  const isPortraitOrSmall = useMediaQuery(Breakpoints.upTo.medium)\r\n\r\n  if (isPortraitOrSmall) {\r\n    return <AlertBanner title=\"Warning\" message=\"Play BoJo Bingo in landscape or on a larger device for the best experience.\" />\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import { makeStyles } from '@material-ui/styles'\r\nimport React from 'react'\r\nimport { Colors } from '../../data'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: 4,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    color: '#000',\r\n    lineHeight: 1.25,\r\n    position: 'relative',\r\n    cursor: 'pointer',\r\n    '&:active, &:focus': {\r\n      outline: '2px orange solid',\r\n    },\r\n    '&[aria-pressed=true]': {\r\n      background: Colors.toryPrimary,\r\n      color: '#fff',\r\n    },\r\n  },\r\n})\r\n\r\nexport default React.memo(function BingoButton({ isCrossedOut, description, onClick }) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <button className={classes.root} aria-pressed={isCrossedOut ? 'true' : 'false'} onClick={onClick}>\r\n      {description}\r\n    </button>\r\n  )\r\n})\r\n","const FreeSpaceText = '-- FREE SPACE --'\r\n\r\nconst bingoItems = [\r\n  FreeSpaceText,\r\n  '\"Good evening\"',\r\n  '\"Alas\"',\r\n  '\"It is with a heavy heart\"',\r\n  '*cutting off another speaker/skipping them*',\r\n  '\"Will, unfortunately, die\"',\r\n  '\"Many loved ones\"',\r\n  '*stammering for over 2 seconds*',\r\n  '\"Hands, face, space\"',\r\n  '\"Could I have the next slide, please?\"',\r\n  '\"Long weeks ahead...\"',\r\n  '*calling someone by the wrong name*',\r\n  '*camera operator pans to wrong person*',\r\n  '\"I think we\\'ve got about\"',\r\n  '\"Anything you want to add?\"',\r\n  '*deflecting question about universities*',\r\n  '\"We will be looking very carefully\"',\r\n  '\"A big sacrifice\"',\r\n  'A train analogy',\r\n  '\"I understand the frustration\"',\r\n  '\"JVT\"',\r\n  '\"Nightingale hospitals\"',\r\n  '\"Oven-ready\"',\r\n  '*contradicting something said earlier that same day*',\r\n  '*standing with crossed legs*',\r\n  '*not actually having a clue about the answer to a question*',\r\n  '*answering a question in the most confusing and long-winded way possible*',\r\n  '\"we will beat this\"',\r\n  '\"our amazing NHS\"',\r\n  '\"in this together\"',\r\n  '\"collective duty\"',\r\n  '\"to be absolutely clear\"',\r\n  '\"I\\'ve said it before, and I\\'ll say it again...\"',\r\n  '\"We will always be guided by the science\"',\r\n  '\"In answer to your question...\" *changes question*',\r\n  \"'collective duty'\",\r\n  \"'world-beating'\",\r\n  \"'rampant'\",\r\n  \"'It brings me great pain...'\",\r\n  \"'Well Laura...'\",\r\n  '*strong look of defeat*',\r\n  \"'soldier on'\",\r\n  \"'working tirelessly'\",\r\n  \"'Erm... erm... Professor?'\",\r\n  'Any random Latin phrase',\r\n  \"'no-one wants...'\",\r\n  \"'not what I wanted'\",\r\n  \"'unprecedented'\",\r\n  '*double fist shake*',\r\n  \"'out of control'\",\r\n  \"'the right thing to do'\",\r\n  \"'new normal'\",\r\n]\r\n\r\nexport { bingoItems as default, FreeSpaceText }\r\n","import AllData from '../data/bingoItems'\r\n\r\n/**\r\n * Generates a random set of 25 items for the playing field\r\n *\r\n * @param {number} [customCount=25] Custom number of values to generate\r\n *\r\n * @returns {string[]}\r\n */\r\nexport default function GenerateRandomGameBoard(customCount) {\r\n  let board = []\r\n\r\n  for (let i = 0; i < (customCount || 25); i++) {\r\n    let dataIndex = 0\r\n\r\n    function chooseRandomIndex() {\r\n      dataIndex = Math.floor(Math.random() * AllData.length)\r\n    }\r\n\r\n    chooseRandomIndex()\r\n\r\n    while (board.includes(AllData[dataIndex])) {\r\n      chooseRandomIndex()\r\n    }\r\n\r\n    board.push(AllData[dataIndex])\r\n  }\r\n\r\n  return board\r\n}\r\n","const Durations = Object.freeze({\r\n  long: 250,\r\n  medium: 200,\r\n  short: 125,\r\n})\r\n\r\nconst DefaultDuration = Durations['medium']\r\nconst DefaultEasing = 'ease-in-out'\r\n\r\n/**\r\n * Generates a transition object to be used for CSS-in-JS.\r\n *\r\n * Implement with a `...` spread operator on the function.\r\n *\r\n * @example { \"myCoolClass\": { ...generateTransition(\"color\", \"medium\", \"ease-out\") } }\r\n *\r\n * @export\r\n * @param {string|string[]} property property/array of properties to be transitioned\r\n * @param {\"long\"|\"medium\"|\"short\"|number|Array.<\"long\"|\"medium\"|\"short\"|number>} [duration=medium] transition duration (if number, use ms)\r\n * @param {string|string[]} [easing=ease-in-out]\r\n * @returns {{ transition: string }}\r\n */\r\nexport default function generateTransitions(property, duration, easing) {\r\n  const propsIsArray = Array.isArray(property),\r\n    durationIsArray = Array.isArray(duration),\r\n    easingIsArray = Array.isArray(easing)\r\n\r\n  if (propsIsArray) {\r\n    // we have multiple transitions to generate\r\n    let endTransition = { transition: '' }\r\n\r\n    property.forEach((prop, i) => {\r\n      let _easing = easing || DefaultEasing,\r\n        _duration\r\n\r\n      /*\r\n        if we have multiple easing/duration values, use, in desc. order:\r\n      \r\n        1. value at same index as this property\r\n        2. last value\r\n        3. default value\r\n      */\r\n\r\n      if (durationIsArray) {\r\n        // use manual ms input, failing that use string-based values as explained above\r\n        _duration = typeof duration[i] === 'number' ? duration[i] : Durations[duration[i]] || Durations[easing[easing.length - 1]] || DefaultDuration\r\n      } else {\r\n        _duration = typeof duration === 'number' ? duration : Durations[duration] || DefaultDuration\r\n      }\r\n\r\n      if (easingIsArray) {\r\n        _easing = easing[i] || easing[easing.length - 1] || DefaultEasing\r\n      }\r\n\r\n      let thisTrans = createTransitionValue(prop, _duration, _easing)\r\n\r\n      // append this transition's string value, with comma if there has been values before it\r\n      endTransition.transition = endTransition.transition + (endTransition.transition === '' ? thisTrans : `, ${thisTrans}`)\r\n    })\r\n\r\n    return endTransition\r\n  } else {\r\n    // only one value to transition\r\n\r\n    let _easing = easing || DefaultEasing,\r\n      _duration\r\n\r\n    /*\r\n      if we have multiple easing/duration values, use, in desc. order:\r\n    \r\n      1. value at same index 0\r\n      3. default value\r\n    */\r\n\r\n    if (durationIsArray) {\r\n      // use manual ms input, failing that use string-based values as explained above\r\n      _duration = typeof duration[0] === 'number' ? duration[0] : Durations[duration[0]] || DefaultDuration\r\n    } else {\r\n      _duration = typeof duration === 'number' ? duration : Durations[duration] || DefaultDuration\r\n    }\r\n\r\n    if (easingIsArray) {\r\n      _easing = easing[0] || DefaultEasing\r\n    }\r\n\r\n    return {\r\n      transition: createTransitionValue(property, _duration, _easing),\r\n    }\r\n  }\r\n}\r\n\r\nfunction createTransitionValue(property, durationMs, easing) {\r\n  if (durationMs < 5) console.warn('`createTransitionValue` called with duration < 5ms. Are you sure this was passed in milliseconds?')\r\n\r\n  return `${property} ${durationMs}ms ${easing}`\r\n}\r\n","import { makeStyles } from '@material-ui/styles'\r\nimport clsx from 'clsx'\r\nimport React from 'react'\r\nimport { Colors } from '../data'\r\nimport generateTransitions from '../functions/generateTransitions'\r\nimport ScrollTo from '../functions/ScrollTo'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    color: Colors.offWhite,\r\n    textDecoration: 'none',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    cursor: 'pointer',\r\n    padding: '4px 16px',\r\n    fontSize: 20,\r\n    borderTopLeftRadius: '24px 50%',\r\n    borderBottomLeftRadius: '24px 50%',\r\n    borderTopRightRadius: '24px 50%',\r\n    borderBottomRightRadius: '24px 50%',\r\n    border: `2px solid ${Colors.dark}`,\r\n    background: Colors.dark,\r\n    lineHeight: '1.6',\r\n    ...generateTransitions('border-color', 'short', 'ease-out'),\r\n    '&:hover, &:focus, &:active': {\r\n      // We remove the a11y outline as we show focus\r\n      // with the border color change\r\n      outline: 'none',\r\n    },\r\n  },\r\n  normalHoverColor: {\r\n    '&:hover, &:focus, &:active': {\r\n      borderColor: Colors.primary,\r\n    },\r\n  },\r\n  icon: {\r\n    width: 24,\r\n    height: 24,\r\n    marginRight: 8,\r\n  },\r\n  iconOnly: {\r\n    width: 44,\r\n    height: 44,\r\n    padding: 10,\r\n    marginRight: 0,\r\n  },\r\n})\r\n\r\n/**\r\n * Component for showing a button. Supports button `onClick`s, `url`s and anchor links.\r\n *\r\n * @param {object} props\r\n * @param {React.ReactNode|string} props.children - content for the button\r\n * @param {React.ReactNode} [props.icon] - optional icon for the button (must be SVG element)\r\n * @param {function} [props.onClick] - onClick handler for the button\r\n * @param {string} [props.url] - URL for the button (optional, but you should specify either onClick or url). Supports normal links, or anchors.\r\n * @param {string} [props.className] - optional classes to apply\r\n *\r\n * @export\r\n * @return {React.ReactNode}\r\n */\r\nexport default function Button(props) {\r\n  const { onClick, children, icon: Icon, url, className } = props\r\n  const classes = useStyles()\r\n\r\n  if (!onClick && !url) {\r\n    throw SyntaxError('You must specify a URL or a button onClick handler when using the Button component.')\r\n  }\r\n\r\n  const isAnchor = typeof url === 'string' && url.startsWith('#')\r\n\r\n  if (typeof url === 'string') {\r\n    return (\r\n      <a\r\n        className={clsx(classes.root, !children && classes.circle, classes.normalHoverColor, className)}\r\n        href={url}\r\n        onClick={\r\n          isAnchor\r\n            ? e => {\r\n                ScrollTo.ID(url.substr(1))\r\n                e.preventDefault()\r\n\r\n                typeof onClick === 'function' && onClick()\r\n              }\r\n            : null\r\n        }\r\n      >\r\n        {Icon && <Icon className={clsx(classes.icon, !children && classes.iconOnly)} />} {children}\r\n      </a>\r\n    )\r\n  } else {\r\n    return (\r\n      <button className={clsx(classes.root, !children && classes.circle, classes.normalHoverColor, className)} onClick={onClick}>\r\n        {Icon && <Icon className={clsx(classes.icon, !children && classes.iconOnly)} />} {children}\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nButton.defaultProps = {\r\n  hoverFocusColor: 'normal',\r\n}\r\n","import React from 'react'\r\n\r\nimport Paragraph from '../typography/paragraph'\r\nimport { useMediaQuery } from '@material-ui/core'\r\nimport { Breakpoints } from '../data'\r\n\r\nexport default function ScrollToViewMore() {\r\n  const isPortraitOrSmall = useMediaQuery(Breakpoints.upTo.playingFieldScrollBarShown)\r\n\r\n  if (isPortraitOrSmall) {\r\n    return (\r\n      <Paragraph bold center>\r\n        To view more of the grid, swipe or scroll horizontally.\r\n      </Paragraph>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport BingoButton from './BingoButton'\r\n\r\nimport copyToClipboard from 'copy-to-clipboard'\r\nimport useStateWithCallback from '../../functions/useStateWithCallback'\r\nimport GenerateRandomGameBoard from '../../functions/GenerateRandomGameBoard'\r\nimport DecodeCustomItems from '../../functions/DecodeCustomItems'\r\nimport EncodeGameBoard from '../../functions/EncodeGameBoard'\r\nimport Button from '../button'\r\nimport { Colors } from '../../data'\r\nimport generateTransitions from '../../functions/generateTransitions'\r\nimport { FreeSpaceText } from '../../data/bingoItems'\r\nimport ScrollToViewMore from '../ScrollToViewMore'\r\n\r\nconst useStyles = makeStyles({\r\n  gridContainer: {\r\n    overflowX: 'auto',\r\n    maxWidth: '100%',\r\n  },\r\n  grid: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(5, 1fr)',\r\n    gridTemplateRows: 'repeat(5, 1fr)',\r\n    gap: 2,\r\n    background: '#000',\r\n    padding: 2,\r\n    '& > *': {\r\n      background: '#fff',\r\n    },\r\n    minWidth: 875,\r\n  },\r\n  controls: {\r\n    marginBottom: 24,\r\n  },\r\n  copyButton: {\r\n    position: 'relative',\r\n    margin: 'auto',\r\n    marginBottom: 16,\r\n  },\r\n  copyButtonCopiedText: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    background: Colors.dark,\r\n    borderTopLeftRadius: '24px 50%',\r\n    borderBottomLeftRadius: '24px 50%',\r\n    borderTopRightRadius: '24px 50%',\r\n    borderBottomRightRadius: '24px 50%',\r\n    opacity: 0,\r\n    ...generateTransitions('opacity'),\r\n    '&[data-shown]': {\r\n      opacity: 1,\r\n    },\r\n  },\r\n})\r\n\r\nfunction GetGameBoard() {\r\n  if (typeof window === 'undefined') return GenerateRandomGameBoard()\r\n\r\n  const params = new URLSearchParams(window.location.search)\r\n  const items = params.get('items')\r\n\r\n  if (!items) return GenerateRandomGameBoard()\r\n\r\n  try {\r\n    // Decode the custom items in URL\r\n    return DecodeCustomItems(items)\r\n  } catch {\r\n    // If this fails, remove the invalid data from the param\r\n    params.delete('items')\r\n    let search = params.toString()\r\n    window.location.search = search ? '?' + search : ''\r\n    //Then just generate a random board\r\n    return GenerateRandomGameBoard()\r\n  }\r\n}\r\n\r\nexport default React.memo(function PlayingField() {\r\n  const defaultGameState = GetGameBoard().map(text => ({ text, checked: false }))\r\n\r\n  /**\r\n   * @type {[{text: string, checked: bool}[], function]}\r\n   */\r\n  const [gameState, setGameState] = useStateWithCallback(defaultGameState)\r\n\r\n  const forceUpdate = useReducer(x => x + 1, 0)[1]\r\n\r\n  const classes = useStyles()\r\n\r\n  // if (!gameBoard) {\r\n  //   return <Paragraph>An error occurred. Please try refreshing the page.</Paragraph>\r\n  // }\r\n\r\n  function ToggleButtonState(index) {\r\n    setGameState(s => {\r\n      /**\r\n       * @type {{text: string, checked: bool}[]}\r\n       */\r\n      let state = s\r\n\r\n      if (state[index].text === FreeSpaceText) {\r\n        return s\r\n      }\r\n\r\n      state[index].checked = !state[index].checked\r\n      return state\r\n    })\r\n    forceUpdate()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.controls}>\r\n        <Button\r\n          className={classes.copyButton}\r\n          onClick={e => {\r\n            let x = []\r\n            gameState.forEach(item => x.push(item.text))\r\n\r\n            // Copy URL to clipboard\r\n            copyToClipboard(window.location.origin + window.location.pathname + EncodeGameBoard(x))\r\n\r\n            // Show 'Copied' text for 1.5s\r\n            let span = e.currentTarget.lastChild\r\n            span.setAttribute('data-shown', '')\r\n            setTimeout(() => span.removeAttribute('data-shown'), 1500)\r\n          }}\r\n        >\r\n          Copy permalink to this bingo board\r\n          <span className={classes.copyButtonCopiedText}>Copied!</span>\r\n        </Button>\r\n\r\n        <ScrollToViewMore />\r\n      </div>\r\n\r\n      <div className={classes.gridContainer}>\r\n        <section className={classes.grid}>\r\n          {gameState.map((boardItem, i) => (\r\n            <BingoButton\r\n              description={boardItem.text}\r\n              isCrossedOut={boardItem.checked || boardItem.text === FreeSpaceText}\r\n              key={`${boardItem.text}__${boardItem.checked}`}\r\n              onClick={() => ToggleButtonState(i)}\r\n            />\r\n          ))}\r\n        </section>\r\n      </div>\r\n    </>\r\n  )\r\n})\r\n","import GenerateRandomGameBoard from './GenerateRandomGameBoard'\r\n\r\n/**\r\n * Converts a GET query of custom board items into an array of strings.\r\n *\r\n * @param {string} data Custom board items param from URL\r\n */\r\nexport default function DecodeCustomItems(data) {\r\n  // Our input is base64 encoded to make it URL safe\r\n  const initialDecode = atob(data)\r\n\r\n  // `initialDecode` contains a list of comma-delimited strings, so lets split them\r\n  const b64items = initialDecode.split(',')\r\n\r\n  let items = []\r\n\r\n  b64items.forEach(item => {\r\n    try {\r\n      // If we have all the items we can fit, don't\r\n      // add more!\r\n      if (items.length >= 25) return\r\n\r\n      // Decode individual custom item\r\n      const decoded = atob(item)\r\n\r\n      // Discard long entries\r\n      //? These will look bad and mess up on small devices\r\n      if (decoded.length > 256) return\r\n\r\n      // Add item to the array\r\n      items.push(decoded)\r\n    } catch {\r\n      // If something goes wrong (i.e. invalid B64)\r\n      // then just skip this item. It isn't worth\r\n      // breaking this entire function.\r\n    }\r\n  })\r\n\r\n  const remainingElements = 25 - items.length\r\n\r\n  if (remainingElements > 0) {\r\n    let extraItems = GenerateRandomGameBoard(remainingElements)\r\n    items = [...items, ...extraItems]\r\n  }\r\n\r\n  return items\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\nexport default function useStateWithCallback(initialState) {\r\n  const [state, _setState] = useState(initialState)\r\n\r\n  const callbackRef = useRef()\r\n  const isFirstCallbackCall = useRef(true)\r\n\r\n  const setState = useCallback((setStateAction, callback) => {\r\n    callbackRef.current = callback\r\n    _setState(setStateAction)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isFirstCallbackCall.current) {\r\n      isFirstCallbackCall.current = false\r\n      return\r\n    }\r\n    callbackRef.current(state)\r\n  }, [state])\r\n\r\n  return [state, setState]\r\n}\r\n","/**\r\n * Converts a provided list of game board buttons into a string\r\n * to append to a URL to get that specific game board back.\r\n *\r\n * @param {string[]} gameBoard Array of game board button text\r\n * \r\n * @returns {string}\r\n * @example \"?items=cGVuaXM=\"\r\n */\r\nexport default function EncodeGameBoard(gameBoard) {\r\n  let encodedBoard = []\r\n\r\n  // base64 encode each item text\r\n  gameBoard.forEach(item => encodedBoard.push(btoa(item)))\r\n\r\n  const commaDelimitedEncodedBoard = encodedBoard.join(',')\r\n  const encodedCommandDelimitedEncodedBoard = btoa(commaDelimitedEncodedBoard)\r\n  const urlSuffix = `?items=${encodedCommandDelimitedEncodedBoard}`\r\n\r\n  return urlSuffix\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nimport { Paragraph, Shout } from '../typography'\r\nimport Layout from '../components/layout'\r\nimport RandomBorisImage from '../components/RandomBorisImage'\r\nimport { Breakpoints } from '../data'\r\nimport PortraitWarning from '../components/PortraitWarning'\r\nimport BodySection from '../components/section'\r\nimport PlayingField from '../components/BingoGame/PlayingField'\r\nimport SEO from '../components/seo'\r\n\r\nconst useStyles = makeStyles({\r\n  headerContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginBottom: 16,\r\n  },\r\n  heading: {\r\n    [`@media ${Breakpoints.downTo.small}`]: {\r\n      marginLeft: 24,\r\n    },\r\n  },\r\n  bojo: {\r\n    transformOrigin: 'center',\r\n    transform: 'scale(0.75)',\r\n    marginLeft: -24,\r\n    [`@media ${Breakpoints.downTo.small}`]: {\r\n      transform: 'none',\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  wider: {\r\n    maxWidth: 1200,\r\n  },\r\n})\r\n\r\nconst IndexPage = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO />\r\n\r\n      <div className={classes.headerContainer}>\r\n        <RandomBorisImage\r\n          alt=\"An extraordinarily obscene image of Boris Johnson\"\r\n          title=\"An extraordinarily obscene image of Boris Johnson\"\r\n          className={classes.bojo}\r\n        />\r\n        <Shout noPadding className={classes.heading}>\r\n          BoJo Briefing Bingo\r\n        </Shout>\r\n      </div>\r\n\r\n      <BodySection>\r\n        <Paragraph>Do you find Boris Johnson's Coronavirus briefings ridiculously dull? If so, this is the website for you!</Paragraph>\r\n        <Paragraph>\r\n          We'll generate a randomised Bingo board each time you refresh this page. If you hear the text or see the actions in any of the boxes, click or tap\r\n          them to mark them off. You win if you get 5 in a row!\r\n        </Paragraph>\r\n        <PortraitWarning />\r\n      </BodySection>\r\n\r\n      <BodySection innerClassName={classes.wider} noSpacing>\r\n        <PlayingField />\r\n      </BodySection>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n"],"sourceRoot":""}